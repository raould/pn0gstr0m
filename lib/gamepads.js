/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /gh/FThompson/gamepads.js@1.2.2/gamepads.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const Gamepads=(()=>{class e{constructor(){if(e._instance)return e._instance;this.gamepads={},this._paused=!1,this._callbacks={connect:[],disconnect:[]},this._supported=void 0!==navigator.getGamepads,e._instance=this}get paused(){return this._paused}get supported(){return this._supported}start(){this._paused=!1,this._run()}stop(){this._paused=!0}poll(){let e=navigator.getGamepads?[...navigator.getGamepads()]:[],s=[];for(let i in e){let n=e[i];if(i&&null!==n){if(void 0!==n.index)if(n.index in this.gamepads)this.gamepads[n.index].update(n);else{this.gamepads[n.index]=new t(n),new a(this.gamepads[n.index],"connect")._dispatch(this._callbacks.connect)}s.push(i)}}for(let e in this.gamepads)if(!s.includes(e)){this.gamepads[e]._last.connected=!1,new a(this.gamepads[e],"disconnect")._dispatch(this._callbacks.disconnect),delete this.gamepads[e]}}addEventListener(e,t){this._callbacks[e].push(t)}removeEventListener(e,t){this._callbacks[e]=this._callbacks[e].filter(e=>e!==t)}_run(){this._supported&&!this._paused&&(this.poll(),requestAnimationFrame(()=>this._run(this)))}}class t{constructor(e){this.gamepad=e,this._callbacks={buttonpress:new Map,buttonrelease:new Map,buttonvaluechange:new Map,axischange:new Map,joystickmove:new Map},this._deadzones={},this._setLastValues()}_setLastValues(){this._last={connected:this.gamepad.connected,axes:this.gamepad.axes.slice(),buttons:Object.keys(this.gamepad.buttons).map(e=>({pressed:this.gamepad.buttons[e].pressed,value:this.gamepad.buttons[e].value}))}}get joystickDeadzone(){return this._deadzone||.1}set joystickDeadzone(e){this._checkDeadzone(e),this._deadzone=e}getAxisDeadzone(e){return this._deadzones[e]}setAxisDeadzone(e,t){this._checkDeadzone(t),this._deadzones[e]=t}getButton(e){return this.gamepad.buttons[e]}getAxis(e){return this.gamepad.axes[e]}isConnected(){return this.gamepad.connected&&this._last.connected}getMapping(){return this.gamepad.mapping}_checkDeadzone(e){if(e>=1||e<0)throw new Error("deadzone must be in range [0, 1)")}update(e){let t,s;e.timestamp===this.gamepad.timestamp?(t=this._last,s=this.gamepad):(t=this.gamepad,s=e,this.gamepad=e),s.connected&&t.connected&&(this._compareButtons(s.buttons,t.buttons),this._compareAxes(s.axes,t.axes),this._compareJoysticks(s.axes,t.axes)),this._setLastValues()}_compareJoysticks(e,t){this._callbacks.joystickmove.forEach((s,a)=>{let i=this._applyJoystickDeadzone(e[a[0]]),o=this._applyJoystickDeadzone(e[a[1]]),d=this._applyJoystickDeadzone(t[a[0]]),c=this._applyJoystickDeadzone(t[a[1]]);if(i!==d||o!==c){new n(this,"joystickmove",a[0],a[1],i,o)._dispatch(s)}})}_applyJoystickDeadzone(e){return this._applyDeadzone(e,this.joystickDeadzone)}_applyAxisDeadzone(e,t){return t in this._deadzones?this._applyDeadzone(e,this._deadzones[t]):e}_applyDeadzone(e,t){return Math.abs(e)>t?e-Math.sign(e)*t:0}_compareAxes(e,t){let s=this._callbacks.axischange;for(let a=0;a<e.length;a++){if(this._applyAxisDeadzone(e[a],a)!==this._applyAxisDeadzone(t[a],a)){let t=new i(this,"axischange",a,e[a]);this._dispatchEvent(t,s,a)}}}_compareButtons(e,t){this._checkButtons("buttonpress",e,t,(e,t)=>e.pressed&&!t.pressed),this._checkButtons("buttonrelease",e,t,(e,t)=>!e.pressed&&t.pressed),this._checkButtons("buttonvaluechange",e,t,(e,t)=>e.value!==t.value,!0)}_checkButtons(e,t,s,a){let n=this._callbacks[e];for(let o=0;o<t.length;o++)if(a(t[o],s[o])){let s=new i(this,e,o,t[o].value);this._dispatchEvent(s,n,o)}}_dispatchEvent(e,t,s){t.has(s)&&e._dispatch(t.get(s)),t.has(-1)&&e._dispatch(t.get(-1))}addEventListener(e,t,s=-1){this._checkJoystickEvent(e,s),this._callbacks[e].has(s)||this._callbacks[e].set(s,[]),this._callbacks[e].get(s).push(t)}removeEventListener(e,t,s=-1){this._checkJoystickEvent(e,s);let a=this._callbacks[e].get(s).filter(e=>e!==t);this._callbacks[e].set(s,a)}_checkJoystickEvent(e,t){if("joystickmove"===e&&!Array.isArray(t))throw new Error("joystickmove events require a two-length index array")}addJoystickEventListener(e,t,s,a){this.addEventListener(e,t,[s,a])}removeJoystickEventListener(e,t,s,a){this.removeEventListener(e,t,[s,a])}}class s{constructor(e,t){this.gamepad=e,this.type=t.toLowerCase(),this._consumed=!1}consume(){this._consumed=!0}isConsumed(){return this._consumed}_dispatch(e){for(let t=0;t<e.length&&!this.isConsumed();t++)e[t](this)}}class a extends s{constructor(e,t){super(e,t)}}class i extends s{constructor(e,t,s,a){super(e,t),this.index=s,this.value=a}}class n extends s{constructor(e,t,s,a,i,n){super(e,t),this.indices=[s,a],this.values=[i,n],this.horizontalIndex=s,this.verticalIndex=a,this.horizontalValue=i,this.verticalValue=n}}return new e})(),StandardMapping={Button:{BUTTON_BOTTOM:0,BUTTON_RIGHT:1,BUTTON_LEFT:2,BUTTON_TOP:3,BUMPER_LEFT:4,BUMPER_RIGHT:5,TRIGGER_LEFT:6,TRIGGER_RIGHT:7,BUTTON_CONTROL_LEFT:8,BUTTON_CONTROL_RIGHT:9,BUTTON_JOYSTICK_LEFT:10,BUTTON_JOYSTICK_RIGHT:11,D_PAD_UP:12,D_PAD_BOTTOM:13,D_PAD_LEFT:14,D_PAD_RIGHT:15,BUTTON_CONTROL_MIDDLE:16},Axis:{JOYSTICK_LEFT_HORIZONTAL:0,JOYSTICK_LEFT_VERTICAL:1,JOYSTICK_RIGHT_HORIZONTAL:2,JOYSTICK_RIGHT_VERTICAL:3,JOYSTICK_LEFT:[0,1],JOYSTICK_RIGHT:[2,3]}};!function(){if("undefined"!=typeof module&&module.exports)module.exports=exports=Gamepads,module.exports.StandardMapping=exports.StandardMapping=StandardMapping;else{let e=this||window;e.Gamepads=e.gamepads=Gamepads,e.StandardMapping=StandardMapping}}();
//# sourceMappingURL=/sm/53fd24a91df23bef0528a9a9adba03fdf1f6ea65e02c55f26082cd5cd2e3cad6.map